apiVersion: apps/v1
kind: Deployment
metadata:
  name: unhook-router
  namespace: unhook
spec:
  replicas: 3
  selector:
    matchLabels:
      app: unhook-router
  template:
    metadata:
      labels:
        app: unhook-router
    spec:
      initContainers:
      - name: wait-for-deps
        image: busybox:1.35
        command: ['sh', '-c', 'until nc -z unhook-postgres 5432 && nc -z unhook-redis 6379; do echo waiting for dependencies; sleep 2; done']
      containers:
      - name: router
        image: unhook/router:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 8080
        env:
        - name: NODE_ENV
          valueFrom:
            configMapKeyRef:
              name: unhook-config
              key: NODE_ENV
        - name: ROUTER_PORT
          value: "8080"
        - name: ROUTER_HOST
          value: "0.0.0.0"
        - name: POSTGRES_URL
          valueFrom:
            secretKeyRef:
              name: unhook-secrets
              key: POSTGRES_URL
        - name: REDIS_URL
          valueFrom:
            secretKeyRef:
              name: unhook-secrets
              key: REDIS_URL
        - name: ENCRYPTION_KEY
          valueFrom:
            secretKeyRef:
              name: unhook-secrets
              key: WEBHOOK_ENCRYPTION_KEY
        - name: LOG_LEVEL
          valueFrom:
            configMapKeyRef:
              name: unhook-config
              key: LOG_LEVEL
        resources:
          requests:
            memory: "128Mi"
            cpu: "100m"
          limits:
            memory: "256Mi"
            cpu: "300m"
        livenessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 10
          periodSeconds: 5
---
apiVersion: v1
kind: Service
metadata:
  name: unhook-router
  namespace: unhook
spec:
  selector:
    app: unhook-router
  ports:
  - port: 8080
    targetPort: 8080
  type: ClusterIP
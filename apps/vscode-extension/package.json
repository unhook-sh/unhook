{
  "activationEvents": [
    "onStartupFinished",
    "onUri:vscode",
    "onUri:vscode-insiders",
    "onUri:cursor",
    "onUri:windsurf"
  ],
  "bugs": {
    "url": "https://github.com/unhook-sh/unhook/issues"
  },
  "categories": [
    "Debuggers",
    "Testing",
    "Other"
  ],
  "contributes": {
    "authentication": [
      {
        "id": "unhook",
        "label": "Unhook"
      }
    ],
    "commands": [
      {
        "category": "Unhook",
        "command": "unhook.showEvents",
        "title": "Show Events"
      },
      {
        "category": "Unhook",
        "command": "unhook.addEvent",
        "title": "Add Event"
      },
      {
        "command": "unhook.replayEvent",
        "icon": "$(play)",
        "title": "Replay Event"
      },
      {
        "command": "unhook.viewEvent",
        "icon": "$(eye)",
        "title": "View Event"
      },
      {
        "command": "unhook.viewRequest",
        "icon": "$(eye)",
        "title": "View Request"
      },
      {
        "command": "unhook.replayRequest",
        "icon": "$(play)",
        "title": "Replay Request"
      },
      {
        "command": "unhook.copyEvent",
        "icon": "$(copy)",
        "title": "Copy Event"
      },
      {
        "command": "unhook.events.refresh",
        "icon": "$(refresh)",
        "title": "Refresh"
      },
      {
        "command": "unhook.openRequestDetails",
        "title": "Open Request Details"
      },
      {
        "category": "Unhook",
        "command": "unhook.quickPick",
        "icon": "$(list-selection)",
        "title": "Quick Pick Event"
      },
      {
        "command": "unhook.events.filter",
        "icon": "$(filter)",
        "title": "Filter Events"
      },
      {
        "category": "Unhook",
        "command": "unhook.focusOutput",
        "icon": "$(output)",
        "title": "Focus Output"
      },
      {
        "category": "Unhook",
        "command": "unhook.clearOutput",
        "icon": "$(clear-all)",
        "title": "Clear Output"
      },
      {
        "category": "Unhook",
        "command": "unhook.toggleOutput",
        "icon": "$(eye)",
        "title": "Toggle Output"
      },
      {
        "category": "Unhook",
        "command": "unhook.toggleAutoShowOutput",
        "icon": "$(eye)",
        "title": "Toggle Auto-Show Output"
      },
      {
        "category": "Unhook",
        "command": "unhook.toggleAutoClearEvents",
        "icon": "$(trash)",
        "title": "Toggle Auto-Clear Events"
      },
      {
        "category": "Unhook",
        "command": "unhook.toggleDelivery",
        "icon": "$(play)",
        "title": "Toggle Event Forwarding"
      },
      {
        "category": "Unhook",
        "command": "unhook.signIn",
        "icon": "$(sign-in)",
        "title": "Sign in to Unhook"
      },
      {
        "category": "Unhook",
        "command": "unhook.signOut",
        "icon": "$(sign-out)",
        "title": "Sign out of Unhook"
      },
      {
        "category": "Unhook",
        "command": "unhook.cancelAuth",
        "icon": "$(close)",
        "title": "Cancel Authentication"
      },
      {
        "category": "Unhook",
        "command": "unhook.requestWebhookAccess",
        "icon": "$(unlock)",
        "title": "Request Webhook Access"
      },
      {
        "category": "Unhook",
        "command": "unhook.createConfig",
        "icon": "$(new-file)",
        "title": "Create unhook.yml Configuration"
      },
      {
        "category": "Unhook",
        "command": "unhook.configureServerUrls",
        "icon": "$(settings-gear)",
        "title": "Configure Server URLs"
      },
      {
        "category": "Unhook",
        "command": "unhook.configureApiKey",
        "icon": "$(key)",
        "title": "Setup MCP Server"
      },
      {
        "category": "Unhook",
        "command": "unhook.promptAnalticsConsent",
        "icon": "$(graph)",
        "title": "Analytics Consent"
      },
      {
        "command": "unhook.config.refresh",
        "icon": "$(refresh)",
        "title": "Refresh Configuration"
      },
      {
        "command": "unhook.copyConfigValue",
        "icon": "$(copy)",
        "title": "Copy Configuration Value"
      },
      {
        "command": "unhook.openConfigFile",
        "icon": "$(file)",
        "title": "Open Configuration File"
      },
      {
        "category": "Unhook",
        "command": "unhook.testFirstTimeUser",
        "icon": "$(refresh)",
        "title": "Test First-Time User (Development)"
      },
      {
        "category": "Unhook",
        "command": "unhook.resetSignInNotification",
        "icon": "$(bell)",
        "title": "Reset Sign-In Notification Preference"
      },
      {
        "category": "Unhook",
        "command": "unhook.startPolling",
        "icon": "$(play)",
        "title": "Start Polling"
      },
      {
        "category": "Unhook",
        "command": "unhook.pausePolling",
        "icon": "$(debug-pause)",
        "title": "Pause Polling"
      },
      {
        "category": "Unhook",
        "command": "unhook.resumePolling",
        "icon": "$(play)",
        "title": "Resume Polling"
      },
      {
        "category": "Unhook",
        "command": "unhook.stopPolling",
        "icon": "$(debug-stop)",
        "title": "Stop Polling"
      },
      {
        "category": "Unhook",
        "command": "unhook.togglePolling",
        "icon": "$(sync)",
        "title": "Toggle Polling"
      }
    ],
    "configuration": {
      "properties": {
        "unhook.analytics.enabled": {
          "default": false,
          "description": "Enable anonymous usage analytics to help improve Unhook. No personal information is collected.",
          "type": "boolean"
        },
        "unhook.apiKey": {
          "default": "",
          "description": "Your Unhook API key for MCP server access. Get this from https://unhook.sh/app/api-keys",
          "type": "string"
        },
        "unhook.apiUrl": {
          "default": "https://unhook.sh",
          "description": "The base URL for the Unhook API. Change this to point to your self-hosted Unhook instance.",
          "type": "string"
        },
        "unhook.configFilePath": {
          "default": "",
          "description": "Path to the Unhook config file. If not set, the extension will look in the workspace root.",
          "type": "string"
        },
        "unhook.dashboardUrl": {
          "default": "https://unhook.sh",
          "description": "The base URL for the Unhook dashboard. Change this to point to your self-hosted Unhook dashboard.",
          "type": "string"
        },
        "unhook.delivery.enabled": {
          "default": true,
          "description": "Enable or disable forwarding new events to their destinations. When disabled, events will be received but not forwarded to local endpoints.",
          "type": "boolean"
        },
        "unhook.events.autoClear": {
          "default": false,
          "description": "Automatically clear old events when the maximum history is reached",
          "type": "boolean"
        },
        "unhook.events.maxHistory": {
          "default": 100,
          "description": "Maximum number of events to keep in history",
          "type": "number"
        },
        "unhook.notifications.showForNewEvents": {
          "default": true,
          "description": "Show notifications when new webhook events are received",
          "type": "boolean"
        },
        "unhook.output.autoShow": {
          "default": false,
          "description": "Automatically show the output panel when new events are received (disabled in production mode)",
          "type": "boolean"
        },
        "unhook.output.maxLines": {
          "default": 1000,
          "description": "Maximum number of lines to keep in the output panel",
          "type": "number"
        },
        "unhook.polling.autoPauseEnabled": {
          "default": true,
          "description": "Enable auto-pause after inactivity to save resources",
          "type": "boolean"
        },
        "unhook.polling.autoPauseTimeout": {
          "default": 600000,
          "description": "Auto-pause timeout in milliseconds after no events are received. Must be between 5 and 60 minutes.",
          "maximum": 3600000,
          "minimum": 300000,
          "type": "number"
        },
        "unhook.polling.interval": {
          "default": 5000,
          "description": "Polling interval in milliseconds for checking new events. Must be between 2 and 30 seconds.",
          "maximum": 30000,
          "minimum": 2000,
          "type": "number"
        },
        "unhook.statusBar.showLastEventTime": {
          "default": true,
          "description": "Show last event time in the status bar",
          "type": "boolean"
        },
        "unhook.statusBar.showPollingInterval": {
          "default": true,
          "description": "Show polling interval in the status bar",
          "type": "boolean"
        },
        "unhook.statusBar.showPollingStatus": {
          "default": true,
          "description": "Show polling status in the status bar",
          "type": "boolean"
        }
      },
      "title": "Unhook"
    },
    "fileAssociations": [
      {
        "icon": "media/unhook-config-yaml.svg",
        "pattern": "**/unhook.yaml"
      },
      {
        "icon": "media/unhook-config-yaml.svg",
        "pattern": "**/unhook.yml"
      },
      {
        "icon": "media/unhook-config-yaml.svg",
        "pattern": "**/unhook.config.yaml"
      },
      {
        "icon": "media/unhook-config-yaml.svg",
        "pattern": "**/unhook.config.yml"
      },
      {
        "icon": "media/unhook-config-json.svg",
        "pattern": "**/unhook.json"
      },
      {
        "icon": "media/unhook-config-json.svg",
        "pattern": "**/unhook.config.json"
      },
      {
        "icon": "media/unhook-config-ts.svg",
        "pattern": "**/unhook.ts"
      },
      {
        "icon": "media/unhook-config-ts.svg",
        "pattern": "**/unhook.config.ts"
      },
      {
        "icon": "media/unhook-config-js.svg",
        "pattern": "**/unhook.js"
      },
      {
        "icon": "media/unhook-config-js.svg",
        "pattern": "**/unhook.cjs"
      },
      {
        "icon": "media/unhook-config-js.svg",
        "pattern": "**/unhook.config.js"
      },
      {
        "icon": "media/unhook-config-js.svg",
        "pattern": "**/unhook.config.cjs"
      }
    ],
    "keybindings": [
      {
        "command": "unhook.cancelAuth",
        "key": "escape",
        "when": "unhook.auth.pending"
      }
    ],
    "languages": [
      {
        "aliases": [
          "Unhook YAML",
          "unhook-yaml"
        ],
        "configuration": "./language-configuration.json",
        "extensions": [],
        "filenames": [
          "unhook.yaml",
          "unhook.yml",
          "unhook.config.yaml",
          "unhook.config.yml"
        ],
        "id": "unhook-yaml"
      },
      {
        "aliases": [
          "Unhook JSON",
          "unhook-json"
        ],
        "configuration": "./language-configuration-json.json",
        "extensions": [],
        "filenames": [
          "unhook.json",
          "unhook.config.json"
        ],
        "id": "unhook-json"
      },
      {
        "aliases": [
          "Unhook TypeScript",
          "unhook-typescript"
        ],
        "configuration": "./language-configuration-ts.json",
        "extensions": [],
        "filenames": [
          "unhook.ts",
          "unhook.config.ts"
        ],
        "id": "unhook-typescript"
      },
      {
        "aliases": [
          "Unhook JavaScript",
          "unhook-javascript"
        ],
        "configuration": "./language-configuration-js.json",
        "extensions": [],
        "filenames": [
          "unhook.js",
          "unhook.cjs",
          "unhook.config.js",
          "unhook.config.cjs"
        ],
        "id": "unhook-javascript"
      }
    ],
    "menus": {
      "view/item/context": [
        {
          "command": "unhook.copyEvent",
          "group": "inline",
          "when": "view == unhook.events && viewItem == unhook.event"
        },
        {
          "command": "unhook.viewEvent",
          "group": "inline",
          "when": "view == unhook.events && viewItem == unhook.event"
        },
        {
          "command": "unhook.replayEvent",
          "group": "inline",
          "when": "view == unhook.events && viewItem == unhook.event"
        },
        {
          "command": "unhook.viewRequest",
          "group": "inline",
          "when": "view == unhook.events && viewItem == unhook.request"
        },
        {
          "command": "unhook.replayRequest",
          "group": "inline",
          "when": "view == unhook.events && viewItem == unhook.request"
        },
        {
          "command": "unhook.copyConfigValue",
          "group": "inline",
          "when": "view == unhook.config && viewItem == unhook.config.detail"
        },
        {
          "command": "unhook.openConfigFile",
          "group": "inline",
          "when": "view == unhook.config"
        }
      ],
      "view/title": [
        {
          "command": "unhook.quickPick",
          "group": "navigation",
          "when": "view == unhook.events"
        },
        {
          "command": "unhook.events.filter",
          "group": "navigation@1",
          "when": "view == unhook.events"
        },
        {
          "command": "unhook.config.refresh",
          "group": "navigation",
          "when": "view == unhook.config"
        }
      ]
    },
    "views": {
      "unhook": [
        {
          "contextualTitle": "Events",
          "id": "unhook.events",
          "name": "Events"
        },
        {
          "contextualTitle": "Configuration",
          "id": "unhook.config",
          "name": "Configuration"
        }
      ]
    },
    "viewsContainers": {
      "activitybar": [
        {
          "icon": "logo-fill-svg.svg",
          "id": "unhook",
          "title": "Unhook"
        }
      ]
    }
  },
  "dependencies": {
    "@unhook/client": "workspace:*",
    "@unhook/zustand": "workspace:*",
    "clsx": "2.1.1",
    "date-fns": "4.1.0",
    "js-yaml": "4.1.0",
    "react": "19.1.1",
    "react-dom": "19.1.1",
    "shiki": "3.9.2",
    "tailwind-merge": "3.3.1",
    "ws": "8.18.3"
  },
  "description": "Webhook Development",
  "devDependencies": {
    "@tailwindcss/postcss": "4.1.11",
    "@types/bun": "1.2.20",
    "@types/glob": "9.0.0",
    "@types/js-yaml": "4.0.9",
    "@types/node": "24.2.1",
    "@types/react": "19.1.10",
    "@types/react-dom": "19.1.7",
    "@types/vscode": "1.102.0",
    "@unhook/db": "workspace:*",
    "@unhook/test-utils": "workspace:*",
    "@vitejs/plugin-react": "5.0.0",
    "@vscode/test-cli": "0.0.11",
    "@vscode/test-electron": "2.5.2",
    "@vscode/vsce": "3.6.0",
    "bun": "1.2.20",
    "concurrently": "9.2.0",
    "glob": "11.0.3",
    "globals": "16.3.0",
    "mocha": "11.7.1",
    "msw": "^2.10.4",
    "msw-trpc": "^2.0.1",
    "ovsx": "0.10.5",
    "postcss": "8.5.6",
    "tailwindcss": "4.1.11",
    "tsup": "8.5.0",
    "typescript": "5.9.2",
    "vite": "7.1.2",
    "vitest": "3.2.4"
  },
  "displayName": "Unhook - Webhook Development",
  "engines": {
    "vscode": ">=1.96.0"
  },
  "homepage": "https://github.com/unhook-sh/unhook#readme",
  "icon": "logo-figma.png",
  "keywords": [
    "webhook",
    "development",
    "testing",
    "debugging"
  ],
  "main": "./dist/extension.js",
  "name": "unhook-vscode",
  "pricing": "Trial",
  "private": true,
  "publisher": "unhook",
  "repository": {
    "type": "git",
    "url": "https://github.com/unhook-sh/unhook"
  },
  "scripts": {
    "build": "bun run typecheck && bun run build:webview && echo 'NODE_ENV before build:base:' $NODE_ENV && NODE_ENV=production bun run build:base",
    "build:base": "tsup",
    "build:debug": "bun run typecheck && bun run build:webview && NODE_ENV=development tsup",
    "build:test": " concurrently \"tsup --config tsup.test.config.ts\" \"tsup\"",
    "build:webview": "vite build",
    "clean": "git clean -xdf .turbo node_modules dist *.vsix",
    "dev:extension": "NODE_ENV=development tsup --watch",
    "dev:webview": "NODE_ENV=development vite --config vite.dev.config.ts",
    "dev.skip": "concurrently --kill-others \"bun run dev:webview\" \"bun run dev:extension\"",
    "package": "bun run build && bun run package:vsix",
    "package:vsix": "bunx vsce package",
    "prepublishOnly": "prepare-publish --vscode-extension --no-readme --no-install-update",
    "pretest": "bun run build:base",
    "publish": "bun run package && bun run publish:vscode && bun run publish:ovsx",
    "publish:ovsx": "infisical run --env prod -- bunx ovsx publish *.vsix",
    "publish:vscode": "infisical run --env prod -- bunx vsce publish",
    "test": "pnpm run build:test && vscode-test --extensionTestsPath=./dist/test/integ/utils/test-runner.js",
    "test:bun": "bun test",
    "test:infisical": "bun run build && infisical run -- vscode-test",
    "test:ovsx": "infisical run --env prod -- bunx ovsx verify-pat",
    "test:vsce": "infisical run --env prod -- bunx vsce verify-pat",
    "typecheck": "tsc --noEmit --emitDeclarationOnly false"
  },
  "sponsor": {
    "url": "https://github.com/sponsors/seawatts"
  },
  "type": "commonjs",
  "version": "0.2.34",
  "vsce": {
    "dependencies": false,
    "yarn": false
  }
}

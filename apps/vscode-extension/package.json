{
  "activationEvents": [
    "onStartupFinished",
    "onUri:vscode",
    "onUri:vscode-insiders",
    "onUri:cursor",
    "onUri:windsurf"
  ],
  "bugs": {
    "url": "https://github.com/unhook-sh/unhook/issues"
  },
  "categories": [
    "Debuggers",
    "Testing",
    "Other"
  ],
  "contributes": {
    "authentication": [
      {
        "id": "unhook",
        "label": "Unhook"
      }
    ],
    "commands": [
      {
        "category": "Unhook",
        "command": "unhook.showEvents",
        "title": "Show Events"
      },
      {
        "category": "Unhook",
        "command": "unhook.addEvent",
        "title": "Add Event"
      },
      {
        "command": "unhook.replayEvent",
        "icon": "$(play)",
        "title": "Replay Event"
      },
      {
        "command": "unhook.viewEvent",
        "icon": "$(eye)",
        "title": "View Event"
      },
      {
        "command": "unhook.viewRequest",
        "icon": "$(eye)",
        "title": "View Request"
      },
      {
        "command": "unhook.replayRequest",
        "icon": "$(play)",
        "title": "Replay Request"
      },
      {
        "command": "unhook.copyEvent",
        "icon": "$(copy)",
        "title": "Copy Event"
      },
      {
        "command": "unhook.events.refresh",
        "icon": "$(refresh)",
        "title": "Refresh"
      },
      {
        "command": "unhook.openRequestDetails",
        "title": "Open Request Details"
      },
      {
        "category": "Unhook",
        "command": "unhook.quickPick",
        "title": "Quick Pick Event",
        "icon": "$(list-selection)"
      },
      {
        "command": "unhook.events.filter",
        "title": "Filter Events",
        "icon": "$(filter)"
      },
      {
        "category": "Unhook",
        "command": "unhook.focusOutput",
        "title": "Focus Output",
        "icon": "$(output)"
      },
      {
        "category": "Unhook",
        "command": "unhook.clearOutput",
        "title": "Clear Output",
        "icon": "$(clear-all)"
      },
      {
        "category": "Unhook",
        "command": "unhook.toggleOutput",
        "title": "Toggle Output",
        "icon": "$(eye)"
      },
      {
        "category": "Unhook",
        "command": "unhook.toggleAutoShowOutput",
        "title": "Toggle Auto-Show Output",
        "icon": "$(eye)"
      },
      {
        "category": "Unhook",
        "command": "unhook.toggleAutoClearEvents",
        "title": "Toggle Auto-Clear Events",
        "icon": "$(trash)"
      },
      {
        "category": "Unhook",
        "command": "unhook.toggleDelivery",
        "title": "Toggle Event Delivery",
        "icon": "$(play)"
      },
      {
        "category": "Unhook",
        "command": "unhook.signIn",
        "title": "Sign in to Unhook",
        "icon": "$(sign-in)"
      },
      {
        "category": "Unhook",
        "command": "unhook.signOut",
        "title": "Sign out of Unhook",
        "icon": "$(sign-out)"
      }
    ],
    "menus": {
      "view/title": [
        {
          "command": "unhook.quickPick",
          "when": "view == unhook.events",
          "group": "navigation"
        },
        {
          "command": "unhook.events.filter",
          "when": "view == unhook.events",
          "group": "navigation@1"
        }
      ],
      "view/item/context": [
        {
          "command": "unhook.copyEvent",
          "group": "inline",
          "when": "view == unhook.events && viewItem == event"
        },
        {
          "command": "unhook.viewEvent",
          "group": "inline",
          "when": "view == unhook.events && viewItem == event"
        },
        {
          "command": "unhook.replayEvent",
          "group": "inline",
          "when": "view == unhook.events && viewItem == event"
        },
        {
          "command": "unhook.viewRequest",
          "group": "inline",
          "when": "view == unhook.events && viewItem == request"
        },
        {
          "command": "unhook.replayRequest",
          "group": "inline",
          "when": "view == unhook.events && viewItem == request"
        }
      ]
    },
    "views": {
      "unhook": [
        {
          "contextualTitle": "Events",
          "id": "unhook.events",
          "name": "Events"
        }
      ]
    },
    "viewsContainers": {
      "activitybar": [
        {
          "icon": "src/media/logo.svg",
          "id": "unhook",
          "title": "Unhook"
        }
      ]
    },
    "configuration": {
      "title": "Unhook",
      "properties": {
        "unhook.output.autoShow": {
          "type": "boolean",
          "default": true,
          "description": "Automatically show the output panel when new events are received"
        },
        "unhook.output.maxLines": {
          "type": "number",
          "default": 1000,
          "description": "Maximum number of lines to keep in the output panel"
        },
        "unhook.events.maxHistory": {
          "type": "number",
          "default": 100,
          "description": "Maximum number of events to keep in history"
        },
        "unhook.events.autoClear": {
          "type": "boolean",
          "default": false,
          "description": "Automatically clear old events when the maximum history is reached"
        },
        "unhook.configFilePath": {
          "type": "string",
          "default": "",
          "description": "Path to the Unhook config file. If not set, the extension will look in the workspace root."
        }
      }
    }
  },
  "dependencies": {
    "@unhook/api": "workspace:*",
    "@unhook/client": "workspace:*",
    "@unhook/db": "workspace:*",
    "@unhook/id": "workspace:*",
    "@unhook/logger": "workspace:*",
    "date-fns": "4.1.0",
    "react": "19.1.0",
    "react-dom": "19.1.0",
    "ws": "8.18.2"
  },
  "description": "Webhook Development",
  "devDependencies": {
    "@types/bun": "1.2.17",
    "@types/glob": "8.1.0",
    "@types/node": "24.0.3",
    "@types/react": "19.1.8",
    "@types/react-dom": "19.1.6",
    "@types/vscode": "1.96.0",
    "@unhook/npm": "workspace:*",
    "@unhook/tsconfig": "workspace:*",
    "@vitejs/plugin-react": "4.5.2",
    "@vscode/test-cli": "0.0.11",
    "@vscode/test-electron": "2.5.2",
    "@vscode/vsce": "3.5.0",
    "concurrently": "9.2.0",
    "glob": "11.0.3",
    "globals": "16.2.0",
    "mocha": "11.7.0",
    "ovsx": "0.10.4",
    "typescript": "5.8.3",
    "vite": "6.3.5"
  },
  "displayName": "Unhook - Webhook Development",
  "engines": {
    "vscode": ">=1.96.0"
  },
  "homepage": "https://github.com/unhook-sh/unhook#readme",
  "keywords": [
    "webhook",
    "development",
    "testing",
    "debugging"
  ],
  "main": "./dist/extension.js",
  "name": "unhook-vscode",
  "private": true,
  "publisher": "unhook",
  "repository": {
    "type": "git",
    "url": "https://github.com/unhook-sh/unhook"
  },
  "scripts": {
    "build": "bun run typecheck && bun run build:webview && bun run build:base --minify --production",
    "build:base": "bun build ./src/extension.ts --outfile ./dist/extension.js --target node --bundle --external vscode --format cjs",
    "build:debug": "bun run typecheck && bun run build:webview && bun run build:base --sourcemap=inline",
    "build:webview": "vite build",
    "clean": "rm -rf .turbo node_modules dist",
    "dev": "concurrently \"bun run dev:webview\" \"bun run dev:extension\"",
    "dev:extension": "NODE_ENV=development bun run build:base --watch --sourcemap=inline",
    "dev:webview": "NODE_ENV=development vite --config vite.dev.config.ts",
    "ovsx": "bunx ovsx publish",
    "package": "bun run typecheck && bun run build",
    "pretest": "bun run build:base",
    "test": "vscode-test",
    "typecheck": "tsc --noEmit --emitDeclarationOnly false",
    "vsce": "bunx vsce package",
    "vscode:prepublish": "bun typecheck && bun run build && prepare-publish --no-readme --no-install-update && bun install"
  },
  "type": "commonjs",
  "version": "0.1.3",
  "files": [
    "dist",
    "media"
  ]
}

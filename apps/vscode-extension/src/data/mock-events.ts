import type { EventTypeWithRequest } from '../types';

export const mockEvents: EventTypeWithRequest[] = [
  {
    id: 'evt_1',
    webhookId: 'wh_1',
    status: 'completed',
    apiKey: null,
    createdAt: new Date(),
    updatedAt: null,
    userId: 'user_1',
    orgId: 'org_1',
    timestamp: new Date(),
    originRequest: {
      id: 'req_1',
      method: 'GET',
      sourceUrl: 'http://example.com',
      headers: {},
      size: 0,
      contentType: 'application/json',
      clientIp: '127.0.0.1',
    },
    source: '*',
    retryCount: 0,
    maxRetries: 3,
    failedReason: null,
    requests: [
      {
        id: 'req_1_1',
        webhookId: 'wh_1',
        eventId: 'evt_1',
        apiKey: null,
        connectionId: null,
        request: {
          id: 'req_1_1',
          method: 'GET',
          sourceUrl: 'http://example.com',
          headers: { 'Content-Type': 'application/json' },
          size: 0,
          contentType: 'application/json',
          clientIp: '127.0.0.1',
        },
        source: '*',
        destination: {
          name: 'Example API',
          url: 'https://api.example.com/webhook',
        },
        status: 'completed',
        failedReason: null,
        timestamp: new Date(),
        createdAt: new Date(),
        completedAt: new Date(),
        response: {
          status: 200,
          headers: { 'Content-Type': 'application/json' },
          body: '{"success": true}',
        },
        responseTimeMs: 150,
        userId: 'user_1',
        orgId: 'org_1',
      },
    ],
  },
  {
    id: 'evt_2',
    webhookId: 'wh_1',
    status: 'failed',
    apiKey: null,
    createdAt: new Date(),
    updatedAt: null,
    userId: 'user_1',
    orgId: 'org_1',
    timestamp: new Date(),
    originRequest: {
      id: 'req_2',
      method: 'POST',
      sourceUrl: 'http://example.com',
      headers: {},
      size: 0,
      contentType: 'application/json',
      clientIp: '127.0.0.1',
    },
    source: '*',
    retryCount: 0,
    maxRetries: 3,
    failedReason: 'Not found',
    requests: [
      {
        id: 'req_2_1',
        webhookId: 'wh_1',
        eventId: 'evt_2',
        apiKey: null,
        connectionId: null,
        request: {
          id: 'req_2_1',
          method: 'POST',
          sourceUrl: 'http://example.com',
          headers: { 'Content-Type': 'application/json' },
          size: 0,
          contentType: 'application/json',
          clientIp: '127.0.0.1',
        },
        source: '*',
        destination: {
          name: 'Example API',
          url: 'https://api.example.com/webhook',
        },
        status: 'failed',
        failedReason: 'Not found',
        timestamp: new Date(),
        createdAt: new Date(),
        completedAt: new Date(),
        response: {
          status: 404,
          headers: { 'Content-Type': 'application/json' },
          body: '{"error": "Not found"}',
        },
        responseTimeMs: 200,
        userId: 'user_1',
        orgId: 'org_1',
      },
      {
        id: 'req_2_2',
        webhookId: 'wh_1',
        eventId: 'evt_2',
        apiKey: null,
        connectionId: null,
        request: {
          id: 'req_2_2',
          method: 'POST',
          sourceUrl: 'http://example.com',
          headers: { 'Content-Type': 'application/json' },
          size: 0,
          contentType: 'application/json',
          clientIp: '127.0.0.1',
        },
        source: '*',
        destination: {
          name: 'Example API',
          url: 'https://api.example.com/webhook',
        },
        status: 'failed',
        failedReason: 'Not found',
        timestamp: new Date(),
        createdAt: new Date(),
        completedAt: new Date(),
        response: {
          status: 404,
          headers: { 'Content-Type': 'application/json' },
          body: '{"error": "Not found"}',
        },
        responseTimeMs: 180,
        userId: 'user_1',
        orgId: 'org_1',
      },
    ],
  },
  {
    id: 'evt_3',
    webhookId: 'wh_2',
    status: 'processing',
    apiKey: 'ak_test_123',
    createdAt: new Date(),
    updatedAt: null,
    userId: 'user_2',
    orgId: 'org_1',
    timestamp: new Date(),
    originRequest: {
      id: 'req_3',
      method: 'PUT',
      sourceUrl: 'https://api.example.com/v1/users',
      headers: { Authorization: 'Bearer token123' },
      size: 1024,
      contentType: 'application/json',
      clientIp: '192.168.1.1',
    },
    source: 'api',
    retryCount: 0,
    maxRetries: 3,
    failedReason: null,
    requests: [], // Event with no requests yet
  },
  {
    id: 'evt_4',
    webhookId: 'wh_3',
    status: 'processing',
    apiKey: null,
    createdAt: new Date(Date.now() - 3600000), // 1 hour ago
    updatedAt: new Date(),
    userId: 'user_3',
    orgId: 'org_2',
    timestamp: new Date(Date.now() - 3600000),
    originRequest: {
      id: 'req_4',
      method: 'POST',
      sourceUrl: 'https://api.example.com/v1/payments',
      headers: { 'Content-Type': 'application/json' },
      size: 2048,
      contentType: 'application/json',
      clientIp: '10.0.0.1',
    },
    source: 'webhook',
    retryCount: 2,
    maxRetries: 3,
    failedReason: 'Connection timeout',
    requests: [
      {
        id: 'req_4_1',
        webhookId: 'wh_3',
        eventId: 'evt_4',
        apiKey: null,
        connectionId: 'conn_1',
        request: {
          id: 'req_4_1',
          method: 'POST',
          sourceUrl: 'https://api.example.com/v1/payments',
          headers: { 'Content-Type': 'application/json' },
          size: 2048,
          contentType: 'application/json',
          clientIp: '10.0.0.1',
        },
        source: 'webhook',
        destination: {
          name: 'Payment Gateway',
          url: 'https://payments.example.com/webhook',
        },
        status: 'failed',
        failedReason: 'Connection timeout',
        timestamp: new Date(Date.now() - 3600000),
        createdAt: new Date(Date.now() - 3600000),
        completedAt: new Date(Date.now() - 3599000),
        response: {
          status: 503,
          headers: { 'Content-Type': 'application/json' },
          body: '{"error": "Service unavailable"}',
        },
        responseTimeMs: 30000,
        userId: 'user_3',
        orgId: 'org_2',
      },
      {
        id: 'req_4_2',
        webhookId: 'wh_3',
        eventId: 'evt_4',
        apiKey: null,
        connectionId: 'conn_1',
        request: {
          id: 'req_4_2',
          method: 'POST',
          sourceUrl: 'https://api.example.com/v1/payments',
          headers: { 'Content-Type': 'application/json' },
          size: 2048,
          contentType: 'application/json',
          clientIp: '10.0.0.1',
        },
        source: 'webhook',
        destination: {
          name: 'Payment Gateway',
          url: 'https://payments.example.com/webhook',
        },
        status: 'failed',
        failedReason: 'Connection timeout',
        timestamp: new Date(Date.now() - 1800000),
        createdAt: new Date(Date.now() - 1800000),
        completedAt: new Date(Date.now() - 1799000),
        response: {
          status: 503,
          headers: { 'Content-Type': 'application/json' },
          body: '{"error": "Service unavailable"}',
        },
        responseTimeMs: 30000,
        userId: 'user_3',
        orgId: 'org_2',
      },
    ],
  },
  {
    id: 'evt_5',
    webhookId: 'wh_4',
    status: 'completed',
    apiKey: 'ak_test_456',
    createdAt: new Date(Date.now() - 7200000), // 2 hours ago
    updatedAt: new Date(Date.now() - 7190000),
    userId: 'user_4',
    orgId: 'org_3',
    timestamp: new Date(Date.now() - 7200000),
    originRequest: {
      id: 'req_5',
      method: 'POST',
      sourceUrl: 'https://api.example.com/v1/files',
      headers: { 'Content-Type': 'multipart/form-data' },
      size: 1048576, // 1MB
      contentType: 'multipart/form-data',
      clientIp: '172.16.0.1',
    },
    source: 'api',
    retryCount: 0,
    maxRetries: 3,
    failedReason: null,
    requests: [
      {
        id: 'req_5_1',
        webhookId: 'wh_4',
        eventId: 'evt_5',
        apiKey: 'ak_test_456',
        connectionId: 'conn_2',
        request: {
          id: 'req_5_1',
          method: 'POST',
          sourceUrl: 'https://api.example.com/v1/files',
          headers: { 'Content-Type': 'multipart/form-data' },
          size: 1048576,
          contentType: 'multipart/form-data',
          clientIp: '172.16.0.1',
        },
        source: 'api',
        destination: {
          name: 'File Storage Service',
          url: 'https://storage.example.com/webhook',
        },
        status: 'completed',
        failedReason: null,
        timestamp: new Date(Date.now() - 7200000),
        createdAt: new Date(Date.now() - 7200000),
        completedAt: new Date(Date.now() - 7199000),
        response: {
          status: 201,
          headers: { 'Content-Type': 'application/json' },
          body: '{"fileId": "file_123", "url": "https://storage.example.com/files/file_123"}',
        },
        responseTimeMs: 5000,
        userId: 'user_4',
        orgId: 'org_3',
      },
    ],
  },
  {
    id: 'evt_6',
    webhookId: 'wh_5',
    status: 'failed',
    apiKey: null,
    createdAt: new Date(Date.now() - 10800000), // 3 hours ago
    updatedAt: new Date(Date.now() - 10790000),
    userId: 'user_5',
    orgId: 'org_4',
    timestamp: new Date(Date.now() - 10800000),
    originRequest: {
      id: 'req_6',
      method: 'POST',
      sourceUrl: 'https://api.example.com/v1/auth',
      headers: { 'Content-Type': 'application/json' },
      size: 512,
      contentType: 'application/json',
      clientIp: '192.168.0.1',
    },
    source: 'webhook',
    retryCount: 1,
    maxRetries: 3,
    failedReason: 'Unauthorized',
    requests: [
      {
        id: 'req_6_1',
        webhookId: 'wh_5',
        eventId: 'evt_6',
        apiKey: null,
        connectionId: 'conn_3',
        request: {
          id: 'req_6_1',
          method: 'POST',
          sourceUrl: 'https://api.example.com/v1/auth',
          headers: { 'Content-Type': 'application/json' },
          size: 512,
          contentType: 'application/json',
          clientIp: '192.168.0.1',
        },
        source: 'webhook',
        destination: {
          name: 'Auth Service',
          url: 'https://auth.example.com/webhook',
        },
        status: 'failed',
        failedReason: 'Unauthorized',
        timestamp: new Date(Date.now() - 10800000),
        createdAt: new Date(Date.now() - 10800000),
        completedAt: new Date(Date.now() - 10799000),
        response: {
          status: 401,
          headers: { 'Content-Type': 'application/json' },
          body: '{"error": "Invalid API key"}',
        },
        responseTimeMs: 100,
        userId: 'user_5',
        orgId: 'org_4',
      },
      {
        id: 'req_6_2',
        webhookId: 'wh_5',
        eventId: 'evt_6',
        apiKey: 'ak_test_789',
        connectionId: 'conn_3',
        request: {
          id: 'req_6_2',
          method: 'POST',
          sourceUrl: 'https://api.example.com/v1/auth',
          headers: { 'Content-Type': 'application/json' },
          size: 512,
          contentType: 'application/json',
          clientIp: '192.168.0.1',
        },
        source: 'webhook',
        destination: {
          name: 'Auth Service',
          url: 'https://auth.example.com/webhook',
        },
        status: 'failed',
        failedReason: 'Forbidden',
        timestamp: new Date(Date.now() - 5400000),
        createdAt: new Date(Date.now() - 5400000),
        completedAt: new Date(Date.now() - 5399000),
        response: {
          status: 403,
          headers: { 'Content-Type': 'application/json' },
          body: '{"error": "Insufficient permissions"}',
        },
        responseTimeMs: 150,
        userId: 'user_5',
        orgId: 'org_4',
      },
    ],
  },
];

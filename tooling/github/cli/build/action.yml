name: "Build CLI"
description: "Build CLI for different platforms"

inputs:
  platform:
    description: "Platform to build for (linux, darwin, win32)"
    required: true
  target:
    description: "Target architecture (x64, arm64, x64-musl, arm64-musl)"
    required: true
  binary_ext:
    description: "Binary extension (e.g. .exe for Windows)"
    required: true
    default: ""
  needs_codesign:
    description: "Whether the binary needs code signing (macOS only)"
    required: true
    default: "false"

runs:
  using: composite
  steps:
    - uses: oven-sh/setup-bun@v1
      with:
        bun-version: latest

    - uses: ./tooling/github/setup

    - name: Create bin directory
      shell: bash
      run: mkdir -p apps/cli/bin

    - name: Build CLI
      shell: bash
      run: |
        # Map platform and target to Bun's target format
        BUN_TARGET=""
        if [[ "${{ inputs.platform }}" == "linux" ]]; then
          if [[ "${{ inputs.target }}" == "x64" ]]; then
            BUN_TARGET="bun-linux-x64"
          elif [[ "${{ inputs.target }}" == "arm64" ]]; then
            BUN_TARGET="bun-linux-arm64"
          elif [[ "${{ inputs.target }}" == "x64-musl" ]]; then
            BUN_TARGET="bun-linux-x64-musl"
          elif [[ "${{ inputs.target }}" == "arm64-musl" ]]; then
            BUN_TARGET="bun-linux-arm64-musl"
          fi
        elif [[ "${{ inputs.platform }}" == "darwin" ]]; then
          if [[ "${{ inputs.target }}" == "x64" ]]; then
            BUN_TARGET="bun-darwin-x64"
          elif [[ "${{ inputs.target }}" == "arm64" ]]; then
            BUN_TARGET="bun-darwin-arm64"
          fi
        elif [[ "${{ inputs.platform }}" == "win32" ]]; then
          if [[ "${{ inputs.target }}" == "x64" ]]; then
            BUN_TARGET="bun-windows-x64"
          fi
        fi

        if [[ -z "$BUN_TARGET" ]]; then
          echo "Error: Unsupported platform-target combination: ${{ inputs.platform }}-${{ inputs.target }}"
          exit 1
        fi

        pnpm --filter @unhook/cli build
      env:
        BUN_BUILD_TARGET: $BUN_TARGET
        NEXT_PUBLIC_SUPABASE_ANON_KEY: ${{ env.NEXT_PUBLIC_SUPABASE_ANON_KEY }}
        NEXT_PUBLIC_SUPABASE_URL: ${{ env.NEXT_PUBLIC_SUPABASE_URL }}
        NEXT_PUBLIC_POSTHOG_KEY: ${{ env.NEXT_PUBLIC_POSTHOG_KEY }}
        NEXT_PUBLIC_POSTHOG_HOST: ${{ env.NEXT_PUBLIC_POSTHOG_HOST }}
        SENTRY_DSN: ${{ env.SENTRY_DSN }}
        SENTRY_ORG: ${{ env.SENTRY_ORG }}
        SENTRY_PROJECT: ${{ env.SENTRY_PROJECT }}
        SENTRY_AUTH_TOKEN: ${{ env.SENTRY_AUTH_TOKEN }}

    - name: Rename binary for platform
      shell: bash
      run: |
        cd apps/cli/bin
        mv unhook${{ inputs.binary_ext }} unhook-${{ inputs.platform }}-${{ inputs.target }}${{ inputs.binary_ext }}
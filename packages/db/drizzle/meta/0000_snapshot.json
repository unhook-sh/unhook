{
  "_meta": {
    "columns": {},
    "schemas": {},
    "tables": {}
  },
  "dialect": "postgresql",
  "enums": {
    "public.apiKeyUsageType": {
      "name": "apiKeyUsageType",
      "schema": "public",
      "values": ["webhook-event", "mcp-server", "webhook-event-request"]
    },
    "public.destinationType": {
      "name": "destinationType",
      "schema": "public",
      "values": ["slack", "discord", "teams", "webhook", "email"]
    },
    "public.eventStatus": {
      "name": "eventStatus",
      "schema": "public",
      "values": ["pending", "processing", "completed", "failed"]
    },
    "public.localConnectionStatus": {
      "name": "localConnectionStatus",
      "schema": "public",
      "values": ["connected", "disconnected"]
    },
    "public.requestStatus": {
      "name": "requestStatus",
      "schema": "public",
      "values": ["pending", "completed", "failed"]
    },
    "public.stripeSubscriptionStatus": {
      "name": "stripeSubscriptionStatus",
      "schema": "public",
      "values": [
        "active",
        "canceled",
        "incomplete",
        "incomplete_expired",
        "past_due",
        "paused",
        "trialing",
        "unpaid"
      ]
    },
    "public.userRole": {
      "name": "userRole",
      "schema": "public",
      "values": ["admin", "superAdmin", "user"]
    },
    "public.webhookAccessRequestStatus": {
      "name": "webhookAccessRequestStatus",
      "schema": "public",
      "values": ["pending", "approved", "rejected", "expired"]
    },
    "public.webhookStatus": {
      "name": "webhookStatus",
      "schema": "public",
      "values": ["active", "inactive"]
    }
  },
  "id": "388d0ae9-099f-4dac-bdbc-9f3c49c4449f",
  "policies": {},
  "prevId": "00000000-0000-0000-0000-000000000000",
  "roles": {},
  "schemas": {},
  "sequences": {},
  "tables": {
    "public.apiKeys": {
      "checkConstraints": {},
      "columns": {
        "createdAt": {
          "default": "now()",
          "name": "createdAt",
          "notNull": true,
          "primaryKey": false,
          "type": "timestamp with time zone"
        },
        "expiresAt": {
          "name": "expiresAt",
          "notNull": false,
          "primaryKey": false,
          "type": "timestamp with time zone"
        },
        "id": {
          "name": "id",
          "notNull": true,
          "primaryKey": true,
          "type": "varchar(128)"
        },
        "isActive": {
          "default": true,
          "name": "isActive",
          "notNull": true,
          "primaryKey": false,
          "type": "boolean"
        },
        "key": {
          "name": "key",
          "notNull": true,
          "primaryKey": false,
          "type": "text"
        },
        "lastUsedAt": {
          "name": "lastUsedAt",
          "notNull": false,
          "primaryKey": false,
          "type": "timestamp with time zone"
        },
        "name": {
          "name": "name",
          "notNull": true,
          "primaryKey": false,
          "type": "text"
        },
        "orgId": {
          "default": "auth.jwt()->>'org_id'",
          "name": "orgId",
          "notNull": true,
          "primaryKey": false,
          "type": "varchar"
        },
        "updatedAt": {
          "name": "updatedAt",
          "notNull": false,
          "primaryKey": false,
          "type": "timestamp with time zone"
        },
        "userId": {
          "default": "auth.jwt()->>'sub'",
          "name": "userId",
          "notNull": true,
          "primaryKey": false,
          "type": "varchar"
        }
      },
      "compositePrimaryKeys": {},
      "foreignKeys": {
        "apiKeys_orgId_orgs_id_fk": {
          "columnsFrom": ["orgId"],
          "columnsTo": ["id"],
          "name": "apiKeys_orgId_orgs_id_fk",
          "onDelete": "cascade",
          "onUpdate": "no action",
          "tableFrom": "apiKeys",
          "tableTo": "orgs"
        },
        "apiKeys_userId_user_id_fk": {
          "columnsFrom": ["userId"],
          "columnsTo": ["id"],
          "name": "apiKeys_userId_user_id_fk",
          "onDelete": "cascade",
          "onUpdate": "no action",
          "tableFrom": "apiKeys",
          "tableTo": "user"
        }
      },
      "indexes": {},
      "isRLSEnabled": false,
      "name": "apiKeys",
      "policies": {},
      "schema": "",
      "uniqueConstraints": {
        "apiKeys_key_unique": {
          "columns": ["key"],
          "name": "apiKeys_key_unique",
          "nullsNotDistinct": false
        }
      }
    },
    "public.apiKeyUsage": {
      "checkConstraints": {},
      "columns": {
        "apiKeyId": {
          "name": "apiKeyId",
          "notNull": true,
          "primaryKey": false,
          "type": "varchar(128)"
        },
        "createdAt": {
          "default": "now()",
          "name": "createdAt",
          "notNull": true,
          "primaryKey": false,
          "type": "timestamp with time zone"
        },
        "id": {
          "name": "id",
          "notNull": true,
          "primaryKey": true,
          "type": "varchar(128)"
        },
        "metadata": {
          "name": "metadata",
          "notNull": false,
          "primaryKey": false,
          "type": "json"
        },
        "orgId": {
          "default": "auth.jwt()->>'org_id'",
          "name": "orgId",
          "notNull": true,
          "primaryKey": false,
          "type": "varchar"
        },
        "type": {
          "name": "type",
          "notNull": true,
          "primaryKey": false,
          "type": "apiKeyUsageType",
          "typeSchema": "public"
        },
        "updatedAt": {
          "name": "updatedAt",
          "notNull": false,
          "primaryKey": false,
          "type": "timestamp with time zone"
        },
        "userId": {
          "default": "auth.jwt()->>'sub'",
          "name": "userId",
          "notNull": true,
          "primaryKey": false,
          "type": "varchar"
        }
      },
      "compositePrimaryKeys": {},
      "foreignKeys": {
        "apiKeyUsage_apiKeyId_apiKeys_id_fk": {
          "columnsFrom": ["apiKeyId"],
          "columnsTo": ["id"],
          "name": "apiKeyUsage_apiKeyId_apiKeys_id_fk",
          "onDelete": "cascade",
          "onUpdate": "no action",
          "tableFrom": "apiKeyUsage",
          "tableTo": "apiKeys"
        },
        "apiKeyUsage_orgId_orgs_id_fk": {
          "columnsFrom": ["orgId"],
          "columnsTo": ["id"],
          "name": "apiKeyUsage_orgId_orgs_id_fk",
          "onDelete": "cascade",
          "onUpdate": "no action",
          "tableFrom": "apiKeyUsage",
          "tableTo": "orgs"
        },
        "apiKeyUsage_userId_user_id_fk": {
          "columnsFrom": ["userId"],
          "columnsTo": ["id"],
          "name": "apiKeyUsage_userId_user_id_fk",
          "onDelete": "cascade",
          "onUpdate": "no action",
          "tableFrom": "apiKeyUsage",
          "tableTo": "user"
        }
      },
      "indexes": {},
      "isRLSEnabled": false,
      "name": "apiKeyUsage",
      "policies": {},
      "schema": "",
      "uniqueConstraints": {}
    },
    "public.authCodes": {
      "checkConstraints": {},
      "columns": {
        "createdAt": {
          "default": "now()",
          "name": "createdAt",
          "notNull": true,
          "primaryKey": false,
          "type": "timestamp with time zone"
        },
        "expiresAt": {
          "name": "expiresAt",
          "notNull": true,
          "primaryKey": false,
          "type": "timestamp with time zone"
        },
        "id": {
          "name": "id",
          "notNull": true,
          "primaryKey": true,
          "type": "varchar(128)"
        },
        "orgId": {
          "default": "auth.jwt()->>'org_id'",
          "name": "orgId",
          "notNull": true,
          "primaryKey": false,
          "type": "varchar"
        },
        "sessionId": {
          "name": "sessionId",
          "notNull": true,
          "primaryKey": false,
          "type": "text"
        },
        "updatedAt": {
          "name": "updatedAt",
          "notNull": false,
          "primaryKey": false,
          "type": "timestamp with time zone"
        },
        "usedAt": {
          "name": "usedAt",
          "notNull": false,
          "primaryKey": false,
          "type": "timestamp with time zone"
        },
        "userId": {
          "default": "auth.jwt()->>'sub'",
          "name": "userId",
          "notNull": true,
          "primaryKey": false,
          "type": "varchar"
        }
      },
      "compositePrimaryKeys": {},
      "foreignKeys": {
        "authCodes_orgId_orgs_id_fk": {
          "columnsFrom": ["orgId"],
          "columnsTo": ["id"],
          "name": "authCodes_orgId_orgs_id_fk",
          "onDelete": "cascade",
          "onUpdate": "no action",
          "tableFrom": "authCodes",
          "tableTo": "orgs"
        },
        "authCodes_userId_user_id_fk": {
          "columnsFrom": ["userId"],
          "columnsTo": ["id"],
          "name": "authCodes_userId_user_id_fk",
          "onDelete": "cascade",
          "onUpdate": "no action",
          "tableFrom": "authCodes",
          "tableTo": "user"
        }
      },
      "indexes": {},
      "isRLSEnabled": false,
      "name": "authCodes",
      "policies": {},
      "schema": "",
      "uniqueConstraints": {}
    },
    "public.connections": {
      "checkConstraints": {},
      "columns": {
        "clientHostname": {
          "name": "clientHostname",
          "notNull": false,
          "primaryKey": false,
          "type": "text"
        },
        "clientId": {
          "name": "clientId",
          "notNull": true,
          "primaryKey": false,
          "type": "text"
        },
        "clientOs": {
          "name": "clientOs",
          "notNull": false,
          "primaryKey": false,
          "type": "text"
        },
        "clientVersion": {
          "name": "clientVersion",
          "notNull": false,
          "primaryKey": false,
          "type": "text"
        },
        "connectedAt": {
          "default": "now()",
          "name": "connectedAt",
          "notNull": true,
          "primaryKey": false,
          "type": "timestamp with time zone"
        },
        "createdAt": {
          "default": "now()",
          "name": "createdAt",
          "notNull": true,
          "primaryKey": false,
          "type": "timestamp with time zone"
        },
        "disconnectedAt": {
          "name": "disconnectedAt",
          "notNull": false,
          "primaryKey": false,
          "type": "timestamp with time zone"
        },
        "id": {
          "name": "id",
          "notNull": true,
          "primaryKey": true,
          "type": "varchar(128)"
        },
        "ipAddress": {
          "name": "ipAddress",
          "notNull": true,
          "primaryKey": false,
          "type": "text"
        },
        "lastPingAt": {
          "default": "now()",
          "name": "lastPingAt",
          "notNull": true,
          "primaryKey": false,
          "type": "timestamp with time zone"
        },
        "orgId": {
          "default": "auth.jwt()->>'org_id'",
          "name": "orgId",
          "notNull": true,
          "primaryKey": false,
          "type": "varchar"
        },
        "updatedAt": {
          "name": "updatedAt",
          "notNull": false,
          "primaryKey": false,
          "type": "timestamp with time zone"
        },
        "userId": {
          "default": "auth.jwt()->>'sub'",
          "name": "userId",
          "notNull": true,
          "primaryKey": false,
          "type": "varchar"
        },
        "webhookId": {
          "name": "webhookId",
          "notNull": true,
          "primaryKey": false,
          "type": "varchar(128)"
        }
      },
      "compositePrimaryKeys": {},
      "foreignKeys": {
        "connections_orgId_orgs_id_fk": {
          "columnsFrom": ["orgId"],
          "columnsTo": ["id"],
          "name": "connections_orgId_orgs_id_fk",
          "onDelete": "cascade",
          "onUpdate": "no action",
          "tableFrom": "connections",
          "tableTo": "orgs"
        },
        "connections_userId_user_id_fk": {
          "columnsFrom": ["userId"],
          "columnsTo": ["id"],
          "name": "connections_userId_user_id_fk",
          "onDelete": "cascade",
          "onUpdate": "no action",
          "tableFrom": "connections",
          "tableTo": "user"
        },
        "connections_webhookId_webhooks_id_fk": {
          "columnsFrom": ["webhookId"],
          "columnsTo": ["id"],
          "name": "connections_webhookId_webhooks_id_fk",
          "onDelete": "cascade",
          "onUpdate": "no action",
          "tableFrom": "connections",
          "tableTo": "webhooks"
        }
      },
      "indexes": {
        "connections_client_version_idx": {
          "columns": [
            {
              "asc": true,
              "expression": "clientVersion",
              "isExpression": false,
              "nulls": "last"
            }
          ],
          "concurrently": false,
          "isUnique": false,
          "method": "btree",
          "name": "connections_client_version_idx",
          "with": {}
        },
        "connections_org_status_idx": {
          "columns": [
            {
              "asc": true,
              "expression": "orgId",
              "isExpression": false,
              "nulls": "last"
            },
            {
              "asc": true,
              "expression": "disconnectedAt",
              "isExpression": false,
              "nulls": "last"
            },
            {
              "asc": true,
              "expression": "lastPingAt",
              "isExpression": false,
              "nulls": "last"
            }
          ],
          "concurrently": false,
          "isUnique": false,
          "method": "btree",
          "name": "connections_org_status_idx",
          "with": {}
        }
      },
      "isRLSEnabled": false,
      "name": "connections",
      "policies": {},
      "schema": "",
      "uniqueConstraints": {}
    },
    "public.events": {
      "checkConstraints": {},
      "columns": {
        "apiKeyId": {
          "name": "apiKeyId",
          "notNull": true,
          "primaryKey": false,
          "type": "varchar(128)"
        },
        "createdAt": {
          "default": "now()",
          "name": "createdAt",
          "notNull": true,
          "primaryKey": false,
          "type": "timestamp with time zone"
        },
        "failedReason": {
          "name": "failedReason",
          "notNull": false,
          "primaryKey": false,
          "type": "text"
        },
        "id": {
          "name": "id",
          "notNull": true,
          "primaryKey": true,
          "type": "varchar(128)"
        },
        "maxRetries": {
          "default": 3,
          "name": "maxRetries",
          "notNull": true,
          "primaryKey": false,
          "type": "integer"
        },
        "orgId": {
          "default": "auth.jwt()->>'org_id'",
          "name": "orgId",
          "notNull": true,
          "primaryKey": false,
          "type": "varchar"
        },
        "originRequest": {
          "name": "originRequest",
          "notNull": true,
          "primaryKey": false,
          "type": "json"
        },
        "retryCount": {
          "default": 0,
          "name": "retryCount",
          "notNull": true,
          "primaryKey": false,
          "type": "integer"
        },
        "source": {
          "default": "'*'",
          "name": "source",
          "notNull": true,
          "primaryKey": false,
          "type": "text"
        },
        "status": {
          "default": "'pending'",
          "name": "status",
          "notNull": true,
          "primaryKey": false,
          "type": "eventStatus",
          "typeSchema": "public"
        },
        "timestamp": {
          "name": "timestamp",
          "notNull": true,
          "primaryKey": false,
          "type": "timestamp with time zone"
        },
        "updatedAt": {
          "name": "updatedAt",
          "notNull": false,
          "primaryKey": false,
          "type": "timestamp with time zone"
        },
        "userId": {
          "default": "auth.jwt()->>'sub'",
          "name": "userId",
          "notNull": true,
          "primaryKey": false,
          "type": "varchar"
        },
        "webhookId": {
          "name": "webhookId",
          "notNull": true,
          "primaryKey": false,
          "type": "varchar(128)"
        }
      },
      "compositePrimaryKeys": {},
      "foreignKeys": {
        "events_apiKeyId_apiKeys_id_fk": {
          "columnsFrom": ["apiKeyId"],
          "columnsTo": ["id"],
          "name": "events_apiKeyId_apiKeys_id_fk",
          "onDelete": "cascade",
          "onUpdate": "no action",
          "tableFrom": "events",
          "tableTo": "apiKeys"
        },
        "events_orgId_orgs_id_fk": {
          "columnsFrom": ["orgId"],
          "columnsTo": ["id"],
          "name": "events_orgId_orgs_id_fk",
          "onDelete": "cascade",
          "onUpdate": "no action",
          "tableFrom": "events",
          "tableTo": "orgs"
        },
        "events_userId_user_id_fk": {
          "columnsFrom": ["userId"],
          "columnsTo": ["id"],
          "name": "events_userId_user_id_fk",
          "onDelete": "cascade",
          "onUpdate": "no action",
          "tableFrom": "events",
          "tableTo": "user"
        },
        "events_webhookId_webhooks_id_fk": {
          "columnsFrom": ["webhookId"],
          "columnsTo": ["id"],
          "name": "events_webhookId_webhooks_id_fk",
          "onDelete": "cascade",
          "onUpdate": "no action",
          "tableFrom": "events",
          "tableTo": "webhooks"
        }
      },
      "indexes": {
        "events_org_status_timestamp_idx": {
          "columns": [
            {
              "asc": true,
              "expression": "orgId",
              "isExpression": false,
              "nulls": "last"
            },
            {
              "asc": true,
              "expression": "status",
              "isExpression": false,
              "nulls": "last"
            },
            {
              "asc": true,
              "expression": "timestamp",
              "isExpression": false,
              "nulls": "last"
            }
          ],
          "concurrently": false,
          "isUnique": false,
          "method": "btree",
          "name": "events_org_status_timestamp_idx",
          "with": {}
        },
        "events_pending_idx": {
          "columns": [
            {
              "asc": true,
              "expression": "timestamp",
              "isExpression": false,
              "nulls": "last"
            }
          ],
          "concurrently": false,
          "isUnique": false,
          "method": "btree",
          "name": "events_pending_idx",
          "where": "\"events\".\"status\" = 'pending'",
          "with": {}
        },
        "events_webhook_status_idx": {
          "columns": [
            {
              "asc": true,
              "expression": "webhookId",
              "isExpression": false,
              "nulls": "last"
            },
            {
              "asc": true,
              "expression": "status",
              "isExpression": false,
              "nulls": "last"
            }
          ],
          "concurrently": false,
          "isUnique": false,
          "method": "btree",
          "name": "events_webhook_status_idx",
          "with": {}
        }
      },
      "isRLSEnabled": false,
      "name": "events",
      "policies": {},
      "schema": "",
      "uniqueConstraints": {}
    },
    "public.forwardingDestinations": {
      "checkConstraints": {},
      "columns": {
        "config": {
          "name": "config",
          "notNull": true,
          "primaryKey": false,
          "type": "json"
        },
        "createdAt": {
          "default": "now()",
          "name": "createdAt",
          "notNull": false,
          "primaryKey": false,
          "type": "timestamp with time zone"
        },
        "id": {
          "name": "id",
          "notNull": true,
          "primaryKey": true,
          "type": "varchar(128)"
        },
        "isActive": {
          "default": true,
          "name": "isActive",
          "notNull": true,
          "primaryKey": false,
          "type": "boolean"
        },
        "name": {
          "name": "name",
          "notNull": true,
          "primaryKey": false,
          "type": "text"
        },
        "orgId": {
          "default": "auth.jwt()->>'org_id'",
          "name": "orgId",
          "notNull": true,
          "primaryKey": false,
          "type": "varchar"
        },
        "type": {
          "name": "type",
          "notNull": true,
          "primaryKey": false,
          "type": "destinationType",
          "typeSchema": "public"
        },
        "updatedAt": {
          "name": "updatedAt",
          "notNull": false,
          "primaryKey": false,
          "type": "timestamp with time zone"
        },
        "userId": {
          "default": "auth.jwt()->>'sub'",
          "name": "userId",
          "notNull": true,
          "primaryKey": false,
          "type": "varchar"
        }
      },
      "compositePrimaryKeys": {},
      "foreignKeys": {
        "forwardingDestinations_orgId_orgs_id_fk": {
          "columnsFrom": ["orgId"],
          "columnsTo": ["id"],
          "name": "forwardingDestinations_orgId_orgs_id_fk",
          "onDelete": "cascade",
          "onUpdate": "no action",
          "tableFrom": "forwardingDestinations",
          "tableTo": "orgs"
        },
        "forwardingDestinations_userId_user_id_fk": {
          "columnsFrom": ["userId"],
          "columnsTo": ["id"],
          "name": "forwardingDestinations_userId_user_id_fk",
          "onDelete": "cascade",
          "onUpdate": "no action",
          "tableFrom": "forwardingDestinations",
          "tableTo": "user"
        }
      },
      "indexes": {},
      "isRLSEnabled": false,
      "name": "forwardingDestinations",
      "policies": {},
      "schema": "",
      "uniqueConstraints": {}
    },
    "public.forwardingExecutions": {
      "checkConstraints": {},
      "columns": {
        "createdAt": {
          "default": "now()",
          "name": "createdAt",
          "notNull": true,
          "primaryKey": false,
          "type": "timestamp with time zone"
        },
        "destinationResponse": {
          "name": "destinationResponse",
          "notNull": false,
          "primaryKey": false,
          "type": "json"
        },
        "error": {
          "name": "error",
          "notNull": false,
          "primaryKey": false,
          "type": "text"
        },
        "eventId": {
          "name": "eventId",
          "notNull": true,
          "primaryKey": false,
          "type": "varchar(128)"
        },
        "executionTimeMs": {
          "name": "executionTimeMs",
          "notNull": false,
          "primaryKey": false,
          "type": "integer"
        },
        "id": {
          "name": "id",
          "notNull": true,
          "primaryKey": true,
          "type": "varchar(128)"
        },
        "orgId": {
          "default": "auth.jwt()->>'org_id'",
          "name": "orgId",
          "notNull": true,
          "primaryKey": false,
          "type": "varchar"
        },
        "originalPayload": {
          "name": "originalPayload",
          "notNull": true,
          "primaryKey": false,
          "type": "json"
        },
        "ruleId": {
          "name": "ruleId",
          "notNull": true,
          "primaryKey": false,
          "type": "varchar(128)"
        },
        "success": {
          "name": "success",
          "notNull": true,
          "primaryKey": false,
          "type": "boolean"
        },
        "transformedPayload": {
          "name": "transformedPayload",
          "notNull": false,
          "primaryKey": false,
          "type": "json"
        },
        "userId": {
          "default": "auth.jwt()->>'sub'",
          "name": "userId",
          "notNull": true,
          "primaryKey": false,
          "type": "varchar"
        }
      },
      "compositePrimaryKeys": {},
      "foreignKeys": {
        "forwardingExecutions_eventId_events_id_fk": {
          "columnsFrom": ["eventId"],
          "columnsTo": ["id"],
          "name": "forwardingExecutions_eventId_events_id_fk",
          "onDelete": "cascade",
          "onUpdate": "no action",
          "tableFrom": "forwardingExecutions",
          "tableTo": "events"
        },
        "forwardingExecutions_orgId_orgs_id_fk": {
          "columnsFrom": ["orgId"],
          "columnsTo": ["id"],
          "name": "forwardingExecutions_orgId_orgs_id_fk",
          "onDelete": "cascade",
          "onUpdate": "no action",
          "tableFrom": "forwardingExecutions",
          "tableTo": "orgs"
        },
        "forwardingExecutions_ruleId_forwardingRules_id_fk": {
          "columnsFrom": ["ruleId"],
          "columnsTo": ["id"],
          "name": "forwardingExecutions_ruleId_forwardingRules_id_fk",
          "onDelete": "cascade",
          "onUpdate": "no action",
          "tableFrom": "forwardingExecutions",
          "tableTo": "forwardingRules"
        },
        "forwardingExecutions_userId_user_id_fk": {
          "columnsFrom": ["userId"],
          "columnsTo": ["id"],
          "name": "forwardingExecutions_userId_user_id_fk",
          "onDelete": "cascade",
          "onUpdate": "no action",
          "tableFrom": "forwardingExecutions",
          "tableTo": "user"
        }
      },
      "indexes": {
        "forwarding_executions_created_idx": {
          "columns": [
            {
              "asc": true,
              "expression": "createdAt",
              "isExpression": false,
              "nulls": "last"
            }
          ],
          "concurrently": false,
          "isUnique": false,
          "method": "btree",
          "name": "forwarding_executions_created_idx",
          "with": {}
        },
        "forwarding_executions_event_idx": {
          "columns": [
            {
              "asc": true,
              "expression": "eventId",
              "isExpression": false,
              "nulls": "last"
            }
          ],
          "concurrently": false,
          "isUnique": false,
          "method": "btree",
          "name": "forwarding_executions_event_idx",
          "with": {}
        },
        "forwarding_executions_rule_idx": {
          "columns": [
            {
              "asc": true,
              "expression": "ruleId",
              "isExpression": false,
              "nulls": "last"
            }
          ],
          "concurrently": false,
          "isUnique": false,
          "method": "btree",
          "name": "forwarding_executions_rule_idx",
          "with": {}
        }
      },
      "isRLSEnabled": false,
      "name": "forwardingExecutions",
      "policies": {},
      "schema": "",
      "uniqueConstraints": {}
    },
    "public.forwardingRules": {
      "checkConstraints": {},
      "columns": {
        "createdAt": {
          "default": "now()",
          "name": "createdAt",
          "notNull": false,
          "primaryKey": false,
          "type": "timestamp with time zone"
        },
        "createdByUserId": {
          "default": "auth.jwt()->>'sub'",
          "name": "createdByUserId",
          "notNull": true,
          "primaryKey": false,
          "type": "varchar"
        },
        "description": {
          "name": "description",
          "notNull": false,
          "primaryKey": false,
          "type": "text"
        },
        "destinationId": {
          "name": "destinationId",
          "notNull": true,
          "primaryKey": false,
          "type": "varchar(128)"
        },
        "errorCount": {
          "default": 0,
          "name": "errorCount",
          "notNull": true,
          "primaryKey": false,
          "type": "integer"
        },
        "executionCount": {
          "default": 0,
          "name": "executionCount",
          "notNull": true,
          "primaryKey": false,
          "type": "integer"
        },
        "filters": {
          "default": "'{}'::json",
          "name": "filters",
          "notNull": true,
          "primaryKey": false,
          "type": "json"
        },
        "id": {
          "name": "id",
          "notNull": true,
          "primaryKey": true,
          "type": "varchar(128)"
        },
        "isActive": {
          "default": true,
          "name": "isActive",
          "notNull": true,
          "primaryKey": false,
          "type": "boolean"
        },
        "lastError": {
          "name": "lastError",
          "notNull": false,
          "primaryKey": false,
          "type": "text"
        },
        "lastErrorAt": {
          "name": "lastErrorAt",
          "notNull": false,
          "primaryKey": false,
          "type": "timestamp with time zone"
        },
        "lastExecutedAt": {
          "name": "lastExecutedAt",
          "notNull": false,
          "primaryKey": false,
          "type": "timestamp with time zone"
        },
        "name": {
          "name": "name",
          "notNull": true,
          "primaryKey": false,
          "type": "text"
        },
        "orgId": {
          "default": "auth.jwt()->>'org_id'",
          "name": "orgId",
          "notNull": true,
          "primaryKey": false,
          "type": "varchar"
        },
        "priority": {
          "default": 0,
          "name": "priority",
          "notNull": true,
          "primaryKey": false,
          "type": "integer"
        },
        "transformation": {
          "name": "transformation",
          "notNull": false,
          "primaryKey": false,
          "type": "text"
        },
        "transformationExamples": {
          "default": "'[]'::json",
          "name": "transformationExamples",
          "notNull": false,
          "primaryKey": false,
          "type": "json"
        },
        "updatedAt": {
          "name": "updatedAt",
          "notNull": false,
          "primaryKey": false,
          "type": "timestamp with time zone"
        },
        "userId": {
          "default": "auth.jwt()->>'sub'",
          "name": "userId",
          "notNull": true,
          "primaryKey": false,
          "type": "varchar"
        },
        "webhookId": {
          "name": "webhookId",
          "notNull": true,
          "primaryKey": false,
          "type": "varchar(128)"
        }
      },
      "compositePrimaryKeys": {},
      "foreignKeys": {
        "forwardingRules_createdByUserId_user_id_fk": {
          "columnsFrom": ["createdByUserId"],
          "columnsTo": ["id"],
          "name": "forwardingRules_createdByUserId_user_id_fk",
          "onDelete": "cascade",
          "onUpdate": "no action",
          "tableFrom": "forwardingRules",
          "tableTo": "user"
        },
        "forwardingRules_destinationId_forwardingDestinations_id_fk": {
          "columnsFrom": ["destinationId"],
          "columnsTo": ["id"],
          "name": "forwardingRules_destinationId_forwardingDestinations_id_fk",
          "onDelete": "cascade",
          "onUpdate": "no action",
          "tableFrom": "forwardingRules",
          "tableTo": "forwardingDestinations"
        },
        "forwardingRules_orgId_orgs_id_fk": {
          "columnsFrom": ["orgId"],
          "columnsTo": ["id"],
          "name": "forwardingRules_orgId_orgs_id_fk",
          "onDelete": "cascade",
          "onUpdate": "no action",
          "tableFrom": "forwardingRules",
          "tableTo": "orgs"
        },
        "forwardingRules_userId_user_id_fk": {
          "columnsFrom": ["userId"],
          "columnsTo": ["id"],
          "name": "forwardingRules_userId_user_id_fk",
          "onDelete": "cascade",
          "onUpdate": "no action",
          "tableFrom": "forwardingRules",
          "tableTo": "user"
        },
        "forwardingRules_webhookId_webhooks_id_fk": {
          "columnsFrom": ["webhookId"],
          "columnsTo": ["id"],
          "name": "forwardingRules_webhookId_webhooks_id_fk",
          "onDelete": "cascade",
          "onUpdate": "no action",
          "tableFrom": "forwardingRules",
          "tableTo": "webhooks"
        }
      },
      "indexes": {
        "forwarding_rules_priority_idx": {
          "columns": [
            {
              "asc": true,
              "expression": "priority",
              "isExpression": false,
              "nulls": "last"
            }
          ],
          "concurrently": false,
          "isUnique": false,
          "method": "btree",
          "name": "forwarding_rules_priority_idx",
          "with": {}
        },
        "forwarding_rules_webhook_active_idx": {
          "columns": [
            {
              "asc": true,
              "expression": "webhookId",
              "isExpression": false,
              "nulls": "last"
            },
            {
              "asc": true,
              "expression": "isActive",
              "isExpression": false,
              "nulls": "last"
            }
          ],
          "concurrently": false,
          "isUnique": false,
          "method": "btree",
          "name": "forwarding_rules_webhook_active_idx",
          "with": {}
        }
      },
      "isRLSEnabled": false,
      "name": "forwardingRules",
      "policies": {},
      "schema": "",
      "uniqueConstraints": {}
    },
    "public.orgMembers": {
      "checkConstraints": {},
      "columns": {
        "createdAt": {
          "default": "now()",
          "name": "createdAt",
          "notNull": false,
          "primaryKey": false,
          "type": "timestamp with time zone"
        },
        "id": {
          "name": "id",
          "notNull": true,
          "primaryKey": true,
          "type": "varchar(128)"
        },
        "orgId": {
          "default": "auth.jwt()->>'org_id'",
          "name": "orgId",
          "notNull": true,
          "primaryKey": false,
          "type": "varchar"
        },
        "role": {
          "default": "'user'",
          "name": "role",
          "notNull": true,
          "primaryKey": false,
          "type": "userRole",
          "typeSchema": "public"
        },
        "updatedAt": {
          "name": "updatedAt",
          "notNull": false,
          "primaryKey": false,
          "type": "timestamp with time zone"
        },
        "userId": {
          "default": "auth.jwt()->>'sub'",
          "name": "userId",
          "notNull": true,
          "primaryKey": false,
          "type": "varchar"
        }
      },
      "compositePrimaryKeys": {},
      "foreignKeys": {
        "orgMembers_orgId_orgs_id_fk": {
          "columnsFrom": ["orgId"],
          "columnsTo": ["id"],
          "name": "orgMembers_orgId_orgs_id_fk",
          "onDelete": "cascade",
          "onUpdate": "no action",
          "tableFrom": "orgMembers",
          "tableTo": "orgs"
        },
        "orgMembers_userId_user_id_fk": {
          "columnsFrom": ["userId"],
          "columnsTo": ["id"],
          "name": "orgMembers_userId_user_id_fk",
          "onDelete": "cascade",
          "onUpdate": "no action",
          "tableFrom": "orgMembers",
          "tableTo": "user"
        }
      },
      "indexes": {},
      "isRLSEnabled": false,
      "name": "orgMembers",
      "policies": {},
      "schema": "",
      "uniqueConstraints": {
        "orgMembers_userId_orgId_unique": {
          "columns": ["userId", "orgId"],
          "name": "orgMembers_userId_orgId_unique",
          "nullsNotDistinct": false
        }
      }
    },
    "public.orgs": {
      "checkConstraints": {},
      "columns": {
        "clerkOrgId": {
          "name": "clerkOrgId",
          "notNull": true,
          "primaryKey": false,
          "type": "text"
        },
        "createdAt": {
          "default": "now()",
          "name": "createdAt",
          "notNull": false,
          "primaryKey": false,
          "type": "timestamp with time zone"
        },
        "createdByUserId": {
          "name": "createdByUserId",
          "notNull": true,
          "primaryKey": false,
          "type": "varchar"
        },
        "id": {
          "name": "id",
          "notNull": true,
          "primaryKey": true,
          "type": "varchar(128)"
        },
        "name": {
          "name": "name",
          "notNull": true,
          "primaryKey": false,
          "type": "text"
        },
        "stripeCustomerId": {
          "name": "stripeCustomerId",
          "notNull": false,
          "primaryKey": false,
          "type": "text"
        },
        "stripeSubscriptionId": {
          "name": "stripeSubscriptionId",
          "notNull": false,
          "primaryKey": false,
          "type": "text"
        },
        "stripeSubscriptionStatus": {
          "name": "stripeSubscriptionStatus",
          "notNull": false,
          "primaryKey": false,
          "type": "stripeSubscriptionStatus",
          "typeSchema": "public"
        },
        "updatedAt": {
          "name": "updatedAt",
          "notNull": false,
          "primaryKey": false,
          "type": "timestamp with time zone"
        }
      },
      "compositePrimaryKeys": {},
      "foreignKeys": {
        "orgs_createdByUserId_user_id_fk": {
          "columnsFrom": ["createdByUserId"],
          "columnsTo": ["id"],
          "name": "orgs_createdByUserId_user_id_fk",
          "onDelete": "cascade",
          "onUpdate": "no action",
          "tableFrom": "orgs",
          "tableTo": "user"
        }
      },
      "indexes": {},
      "isRLSEnabled": false,
      "name": "orgs",
      "policies": {},
      "schema": "",
      "uniqueConstraints": {
        "orgs_clerkOrgId_unique": {
          "columns": ["clerkOrgId"],
          "name": "orgs_clerkOrgId_unique",
          "nullsNotDistinct": false
        }
      }
    },
    "public.requests": {
      "checkConstraints": {},
      "columns": {
        "apiKeyId": {
          "name": "apiKeyId",
          "notNull": true,
          "primaryKey": false,
          "type": "varchar(128)"
        },
        "completedAt": {
          "name": "completedAt",
          "notNull": false,
          "primaryKey": false,
          "type": "timestamp with time zone"
        },
        "connectionId": {
          "name": "connectionId",
          "notNull": false,
          "primaryKey": false,
          "type": "varchar(128)"
        },
        "createdAt": {
          "default": "now()",
          "name": "createdAt",
          "notNull": true,
          "primaryKey": false,
          "type": "timestamp with time zone"
        },
        "destination": {
          "name": "destination",
          "notNull": true,
          "primaryKey": false,
          "type": "json"
        },
        "eventId": {
          "name": "eventId",
          "notNull": false,
          "primaryKey": false,
          "type": "varchar(128)"
        },
        "failedReason": {
          "name": "failedReason",
          "notNull": false,
          "primaryKey": false,
          "type": "text"
        },
        "id": {
          "name": "id",
          "notNull": true,
          "primaryKey": true,
          "type": "varchar(128)"
        },
        "orgId": {
          "default": "auth.jwt()->>'org_id'",
          "name": "orgId",
          "notNull": true,
          "primaryKey": false,
          "type": "varchar"
        },
        "request": {
          "name": "request",
          "notNull": true,
          "primaryKey": false,
          "type": "json"
        },
        "response": {
          "name": "response",
          "notNull": false,
          "primaryKey": false,
          "type": "json"
        },
        "responseTimeMs": {
          "default": 0,
          "name": "responseTimeMs",
          "notNull": true,
          "primaryKey": false,
          "type": "integer"
        },
        "source": {
          "default": "'*'",
          "name": "source",
          "notNull": true,
          "primaryKey": false,
          "type": "text"
        },
        "status": {
          "name": "status",
          "notNull": true,
          "primaryKey": false,
          "type": "requestStatus",
          "typeSchema": "public"
        },
        "timestamp": {
          "name": "timestamp",
          "notNull": true,
          "primaryKey": false,
          "type": "timestamp with time zone"
        },
        "userId": {
          "default": "auth.jwt()->>'sub'",
          "name": "userId",
          "notNull": true,
          "primaryKey": false,
          "type": "varchar"
        },
        "webhookId": {
          "name": "webhookId",
          "notNull": true,
          "primaryKey": false,
          "type": "varchar(128)"
        }
      },
      "compositePrimaryKeys": {},
      "foreignKeys": {
        "requests_apiKeyId_apiKeys_id_fk": {
          "columnsFrom": ["apiKeyId"],
          "columnsTo": ["id"],
          "name": "requests_apiKeyId_apiKeys_id_fk",
          "onDelete": "cascade",
          "onUpdate": "no action",
          "tableFrom": "requests",
          "tableTo": "apiKeys"
        },
        "requests_connectionId_connections_id_fk": {
          "columnsFrom": ["connectionId"],
          "columnsTo": ["id"],
          "name": "requests_connectionId_connections_id_fk",
          "onDelete": "cascade",
          "onUpdate": "no action",
          "tableFrom": "requests",
          "tableTo": "connections"
        },
        "requests_eventId_events_id_fk": {
          "columnsFrom": ["eventId"],
          "columnsTo": ["id"],
          "name": "requests_eventId_events_id_fk",
          "onDelete": "cascade",
          "onUpdate": "no action",
          "tableFrom": "requests",
          "tableTo": "events"
        },
        "requests_orgId_orgs_id_fk": {
          "columnsFrom": ["orgId"],
          "columnsTo": ["id"],
          "name": "requests_orgId_orgs_id_fk",
          "onDelete": "cascade",
          "onUpdate": "no action",
          "tableFrom": "requests",
          "tableTo": "orgs"
        },
        "requests_userId_user_id_fk": {
          "columnsFrom": ["userId"],
          "columnsTo": ["id"],
          "name": "requests_userId_user_id_fk",
          "onDelete": "cascade",
          "onUpdate": "no action",
          "tableFrom": "requests",
          "tableTo": "user"
        },
        "requests_webhookId_webhooks_id_fk": {
          "columnsFrom": ["webhookId"],
          "columnsTo": ["id"],
          "name": "requests_webhookId_webhooks_id_fk",
          "onDelete": "cascade",
          "onUpdate": "no action",
          "tableFrom": "requests",
          "tableTo": "webhooks"
        }
      },
      "indexes": {
        "requests_connection_timestamp_idx": {
          "columns": [
            {
              "asc": true,
              "expression": "connectionId",
              "isExpression": false,
              "nulls": "last"
            },
            {
              "asc": true,
              "expression": "timestamp",
              "isExpression": false,
              "nulls": "last"
            }
          ],
          "concurrently": false,
          "isUnique": false,
          "method": "btree",
          "name": "requests_connection_timestamp_idx",
          "with": {}
        },
        "requests_event_id_idx": {
          "columns": [
            {
              "asc": true,
              "expression": "eventId",
              "isExpression": false,
              "nulls": "last"
            }
          ],
          "concurrently": false,
          "isUnique": false,
          "method": "btree",
          "name": "requests_event_id_idx",
          "with": {}
        },
        "requests_org_status_timestamp_idx": {
          "columns": [
            {
              "asc": true,
              "expression": "orgId",
              "isExpression": false,
              "nulls": "last"
            },
            {
              "asc": true,
              "expression": "status",
              "isExpression": false,
              "nulls": "last"
            },
            {
              "asc": true,
              "expression": "timestamp",
              "isExpression": false,
              "nulls": "last"
            }
          ],
          "concurrently": false,
          "isUnique": false,
          "method": "btree",
          "name": "requests_org_status_timestamp_idx",
          "with": {}
        },
        "requests_pending_idx": {
          "columns": [
            {
              "asc": true,
              "expression": "timestamp",
              "isExpression": false,
              "nulls": "last"
            }
          ],
          "concurrently": false,
          "isUnique": false,
          "method": "btree",
          "name": "requests_pending_idx",
          "where": "\"requests\".\"status\" = 'pending'",
          "with": {}
        },
        "requests_slow_idx": {
          "columns": [
            {
              "asc": true,
              "expression": "timestamp",
              "isExpression": false,
              "nulls": "last"
            }
          ],
          "concurrently": false,
          "isUnique": false,
          "method": "btree",
          "name": "requests_slow_idx",
          "where": "\"requests\".\"responseTimeMs\" > 1000",
          "with": {}
        },
        "requests_webhook_id_idx": {
          "columns": [
            {
              "asc": true,
              "expression": "webhookId",
              "isExpression": false,
              "nulls": "last"
            }
          ],
          "concurrently": false,
          "isUnique": false,
          "method": "btree",
          "name": "requests_webhook_id_idx",
          "with": {}
        }
      },
      "isRLSEnabled": false,
      "name": "requests",
      "policies": {},
      "schema": "",
      "uniqueConstraints": {}
    },
    "public.user": {
      "checkConstraints": {},
      "columns": {
        "avatarUrl": {
          "name": "avatarUrl",
          "notNull": false,
          "primaryKey": false,
          "type": "text"
        },
        "clerkId": {
          "name": "clerkId",
          "notNull": true,
          "primaryKey": false,
          "type": "text"
        },
        "createdAt": {
          "default": "now()",
          "name": "createdAt",
          "notNull": true,
          "primaryKey": false,
          "type": "timestamp"
        },
        "email": {
          "name": "email",
          "notNull": true,
          "primaryKey": false,
          "type": "text"
        },
        "firstName": {
          "name": "firstName",
          "notNull": false,
          "primaryKey": false,
          "type": "text"
        },
        "id": {
          "name": "id",
          "notNull": true,
          "primaryKey": true,
          "type": "varchar(128)"
        },
        "lastLoggedInAt": {
          "name": "lastLoggedInAt",
          "notNull": false,
          "primaryKey": false,
          "type": "timestamp with time zone"
        },
        "lastName": {
          "name": "lastName",
          "notNull": false,
          "primaryKey": false,
          "type": "text"
        },
        "online": {
          "default": false,
          "name": "online",
          "notNull": true,
          "primaryKey": false,
          "type": "boolean"
        },
        "updatedAt": {
          "name": "updatedAt",
          "notNull": false,
          "primaryKey": false,
          "type": "timestamp with time zone"
        }
      },
      "compositePrimaryKeys": {},
      "foreignKeys": {},
      "indexes": {},
      "isRLSEnabled": false,
      "name": "user",
      "policies": {},
      "schema": "",
      "uniqueConstraints": {
        "user_clerkId_unique": {
          "columns": ["clerkId"],
          "name": "user_clerkId_unique",
          "nullsNotDistinct": false
        }
      }
    },
    "public.webhookAccessRequests": {
      "checkConstraints": {},
      "columns": {
        "createdAt": {
          "default": "now()",
          "name": "createdAt",
          "notNull": true,
          "primaryKey": false,
          "type": "timestamp with time zone"
        },
        "expiresAt": {
          "name": "expiresAt",
          "notNull": true,
          "primaryKey": false,
          "type": "timestamp with time zone"
        },
        "id": {
          "name": "id",
          "notNull": true,
          "primaryKey": true,
          "type": "varchar(128)"
        },
        "orgId": {
          "default": "auth.jwt()->>'org_id'",
          "name": "orgId",
          "notNull": true,
          "primaryKey": false,
          "type": "varchar"
        },
        "requesterEmail": {
          "name": "requesterEmail",
          "notNull": true,
          "primaryKey": false,
          "type": "text"
        },
        "requesterId": {
          "default": "auth.jwt()->>'sub'",
          "name": "requesterId",
          "notNull": true,
          "primaryKey": false,
          "type": "varchar"
        },
        "requesterMessage": {
          "name": "requesterMessage",
          "notNull": false,
          "primaryKey": false,
          "type": "text"
        },
        "respondedAt": {
          "name": "respondedAt",
          "notNull": false,
          "primaryKey": false,
          "type": "timestamp with time zone"
        },
        "responderId": {
          "name": "responderId",
          "notNull": false,
          "primaryKey": false,
          "type": "varchar"
        },
        "responseMessage": {
          "name": "responseMessage",
          "notNull": false,
          "primaryKey": false,
          "type": "text"
        },
        "status": {
          "default": "'pending'",
          "name": "status",
          "notNull": true,
          "primaryKey": false,
          "type": "webhookAccessRequestStatus",
          "typeSchema": "public"
        },
        "updatedAt": {
          "name": "updatedAt",
          "notNull": false,
          "primaryKey": false,
          "type": "timestamp with time zone"
        },
        "webhookId": {
          "name": "webhookId",
          "notNull": true,
          "primaryKey": false,
          "type": "varchar(128)"
        }
      },
      "compositePrimaryKeys": {},
      "foreignKeys": {
        "webhookAccessRequests_orgId_orgs_id_fk": {
          "columnsFrom": ["orgId"],
          "columnsTo": ["id"],
          "name": "webhookAccessRequests_orgId_orgs_id_fk",
          "onDelete": "cascade",
          "onUpdate": "no action",
          "tableFrom": "webhookAccessRequests",
          "tableTo": "orgs"
        },
        "webhookAccessRequests_requesterId_user_id_fk": {
          "columnsFrom": ["requesterId"],
          "columnsTo": ["id"],
          "name": "webhookAccessRequests_requesterId_user_id_fk",
          "onDelete": "cascade",
          "onUpdate": "no action",
          "tableFrom": "webhookAccessRequests",
          "tableTo": "user"
        },
        "webhookAccessRequests_responderId_user_id_fk": {
          "columnsFrom": ["responderId"],
          "columnsTo": ["id"],
          "name": "webhookAccessRequests_responderId_user_id_fk",
          "onDelete": "set null",
          "onUpdate": "no action",
          "tableFrom": "webhookAccessRequests",
          "tableTo": "user"
        },
        "webhookAccessRequests_webhookId_webhooks_id_fk": {
          "columnsFrom": ["webhookId"],
          "columnsTo": ["id"],
          "name": "webhookAccessRequests_webhookId_webhooks_id_fk",
          "onDelete": "cascade",
          "onUpdate": "no action",
          "tableFrom": "webhookAccessRequests",
          "tableTo": "webhooks"
        }
      },
      "indexes": {
        "webhook_access_requests_pending_expires_idx": {
          "columns": [
            {
              "asc": true,
              "expression": "expiresAt",
              "isExpression": false,
              "nulls": "last"
            }
          ],
          "concurrently": false,
          "isUnique": false,
          "method": "btree",
          "name": "webhook_access_requests_pending_expires_idx",
          "where": "\"webhookAccessRequests\".\"status\" = 'pending'",
          "with": {}
        },
        "webhook_access_requests_requester_idx": {
          "columns": [
            {
              "asc": true,
              "expression": "requesterId",
              "isExpression": false,
              "nulls": "last"
            }
          ],
          "concurrently": false,
          "isUnique": false,
          "method": "btree",
          "name": "webhook_access_requests_requester_idx",
          "with": {}
        },
        "webhook_access_requests_webhook_status_idx": {
          "columns": [
            {
              "asc": true,
              "expression": "webhookId",
              "isExpression": false,
              "nulls": "last"
            },
            {
              "asc": true,
              "expression": "status",
              "isExpression": false,
              "nulls": "last"
            }
          ],
          "concurrently": false,
          "isUnique": false,
          "method": "btree",
          "name": "webhook_access_requests_webhook_status_idx",
          "with": {}
        }
      },
      "isRLSEnabled": false,
      "name": "webhookAccessRequests",
      "policies": {},
      "schema": "",
      "uniqueConstraints": {}
    },
    "public.webhooks": {
      "checkConstraints": {},
      "columns": {
        "apiKeyId": {
          "name": "apiKeyId",
          "notNull": true,
          "primaryKey": false,
          "type": "varchar(128)"
        },
        "config": {
          "default": "'{\"headers\":{},\"requests\":{},\"storage\":{\"maxRequestBodySize\":1048576,\"maxResponseBodySize\":1048576,\"storeHeaders\":true,\"storeRequestBody\":true,\"storeResponseBody\":true}}'::json",
          "name": "config",
          "notNull": true,
          "primaryKey": false,
          "type": "json"
        },
        "createdAt": {
          "default": "now()",
          "name": "createdAt",
          "notNull": false,
          "primaryKey": false,
          "type": "timestamp with time zone"
        },
        "id": {
          "name": "id",
          "notNull": true,
          "primaryKey": true,
          "type": "varchar(128)"
        },
        "isPrivate": {
          "default": false,
          "name": "isPrivate",
          "notNull": true,
          "primaryKey": false,
          "type": "boolean"
        },
        "name": {
          "name": "name",
          "notNull": true,
          "primaryKey": false,
          "type": "text"
        },
        "orgId": {
          "default": "auth.jwt()->>'org_id'",
          "name": "orgId",
          "notNull": true,
          "primaryKey": false,
          "type": "varchar"
        },
        "requestCount": {
          "default": 0,
          "name": "requestCount",
          "notNull": true,
          "primaryKey": false,
          "type": "integer"
        },
        "status": {
          "default": "'active'",
          "name": "status",
          "notNull": true,
          "primaryKey": false,
          "type": "webhookStatus",
          "typeSchema": "public"
        },
        "updatedAt": {
          "name": "updatedAt",
          "notNull": false,
          "primaryKey": false,
          "type": "timestamp with time zone"
        },
        "userId": {
          "default": "auth.jwt()->>'sub'",
          "name": "userId",
          "notNull": true,
          "primaryKey": false,
          "type": "varchar"
        }
      },
      "compositePrimaryKeys": {},
      "foreignKeys": {
        "webhooks_apiKeyId_apiKeys_id_fk": {
          "columnsFrom": ["apiKeyId"],
          "columnsTo": ["id"],
          "name": "webhooks_apiKeyId_apiKeys_id_fk",
          "onDelete": "cascade",
          "onUpdate": "no action",
          "tableFrom": "webhooks",
          "tableTo": "apiKeys"
        },
        "webhooks_orgId_orgs_id_fk": {
          "columnsFrom": ["orgId"],
          "columnsTo": ["id"],
          "name": "webhooks_orgId_orgs_id_fk",
          "onDelete": "cascade",
          "onUpdate": "no action",
          "tableFrom": "webhooks",
          "tableTo": "orgs"
        },
        "webhooks_userId_user_id_fk": {
          "columnsFrom": ["userId"],
          "columnsTo": ["id"],
          "name": "webhooks_userId_user_id_fk",
          "onDelete": "cascade",
          "onUpdate": "no action",
          "tableFrom": "webhooks",
          "tableTo": "user"
        }
      },
      "indexes": {},
      "isRLSEnabled": false,
      "name": "webhooks",
      "policies": {},
      "schema": "",
      "uniqueConstraints": {}
    }
  },
  "version": "7",
  "views": {}
}
